@{
    Layout = "_Dashboard";
    ViewBag.PageTitle = "Students";
    ViewBag.SubPageTitle = "Create";
}

@model SchoolManagementSystem.Models.StudentViewModel

@{
    ViewData["Title"] = "Create Student";
}

<h2>Create Student</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form id="createStudentForm" asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="UserId" class="form-label">Pending User <span class="text-danger">*</span></label>
            <select asp-for="UserId" class="form-select" asp-items="ViewBag.PendingUsers" id="pendingUserDropdown" required>
                <option value="">Select Student</option> <!-- Default option -->
            </select>
            <span asp-validation-for="UserId" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="SchoolClassId" class="form-label">School Class <span class="text-danger">*</span></label>
            <select asp-for="SchoolClassId" class="form-select" asp-items="ViewBag.SchoolClassId" required>
                <option value="">Select Class</option> <!-- Default option -->
            </select>
            <span asp-validation-for="SchoolClassId" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="FirstName" class="form-label">First Name <span class="text-danger">*</span></label>
            <input asp-for="FirstName" class="form-control" required />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="LastName" class="form-label">Last Name <span class="text-danger">*</span></label>
            <input asp-for="LastName" class="form-control" required />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="EnrollmentDate" class="form-label">Enrollment Date <span class="text-danger">*</span></label>
            <input asp-for="EnrollmentDate" type="date" class="form-control" required />
            <span asp-validation-for="EnrollmentDate" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="Status" class="form-label">Status <span class="text-danger">*</span></label>
            <select asp-for="Status" class="form-select" required>
                <option value="">Select Status</option> <!-- Default option -->
                @foreach (var status in Enum.GetValues(typeof(SchoolManagementSystem.Data.Entities.StudentStatus)).Cast<SchoolManagementSystem.Data.Entities.StudentStatus>())
                {
                    <option value="@status">@status</option>
                }
            </select>
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="ImageFile" class="form-label">Image</label>
            <input asp-for="ImageFile" type="file" class="form-control" id="imageUpload" />
            <span asp-validation-for="ImageFile" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label>Image Preview</label>
            <img id="imagePreview" src="@Model.ImageFullPath" alt="Image Preview" style="max-width: 150px; max-height: 150px; border-radius: 10px;" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Create Student</button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/formHelpers.js"></script> 

    <script>
        document.getElementById("pendingUserDropdown").addEventListener("change", function () {
            const selectedUserId = this.value;
            const pendingUsers = @Html.Raw(Json.Serialize(Model.PendingUsers));

            const selectedUser = pendingUsers.find(user => user.id === selectedUserId);
            if (selectedUser) {
                document.getElementById("FirstName").value = selectedUser.firstName;
                document.getElementById("LastName").value = selectedUser.lastName;
            } else {
                document.getElementById("FirstName").value = '';
                document.getElementById("LastName").value = '';
            }
        });

        // Preview the uploaded image
        setupImageUploadPreview("imageUpload", "imagePreview");

        $(document).ready(function () {
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    Swal.fire({
                        title: 'Error',
                        text: '@TempData["ErrorMessage"]',
                        icon: 'error'
                    });
            </text>
        }
                });
        // SweetAlert2 confirmation before submitting the form
        setupSweetAlertOnSubmit("createStudentForm", "Student created successfully.");

    </script>
}
